// This file is auto-generated by @hey-api/openapi-ts

/**
 * Input model for storing bounding box coordinates.
 */
export type BoundingBoxInput = {
    /**
     * Bounding box coordinates [x0, y0, x1, y1].
     */
    coords: [
        number,
        number,
        number,
        number
    ];
};

/**
 * Response model for retrieving bounding box coordinates.
 */
export type BoundingBoxResponse = {
    /**
     * The filename stem of the slide.
     */
    slide_filename: string;
    /**
     * Bounding box coordinates [x0, y0, x1, y1]. Empty list if no box is set.
     */
    coords?: Array<number>;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * Response model for returning slide image data.
 */
export type SlideImageResponse = {
    /**
     * The filename stem of the slide.
     */
    slide_filename: string;
    /**
     * Base64 encoded PNG image data.
     */
    image_data: string;
};

/**
 * Response model for listing slide filenames.
 */
export type SlideListResponse = {
    /**
     * List of slide filenames (stems) found.
     */
    slides: Array<string>;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type GetSlidesSlidesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/slides';
};

export type GetSlidesSlidesGetResponses = {
    /**
     * Successful Response
     */
    200: SlideListResponse;
};

export type GetSlidesSlidesGetResponse = GetSlidesSlidesGetResponses[keyof GetSlidesSlidesGetResponses];

export type GetBoundingBoxBoxesSlideFilenameGetData = {
    body?: never;
    path: {
        slide_filename: string;
    };
    query?: never;
    url: '/boxes/{slide_filename}';
};

export type GetBoundingBoxBoxesSlideFilenameGetErrors = {
    /**
     * Slide filename not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetBoundingBoxBoxesSlideFilenameGetError = GetBoundingBoxBoxesSlideFilenameGetErrors[keyof GetBoundingBoxBoxesSlideFilenameGetErrors];

export type GetBoundingBoxBoxesSlideFilenameGetResponses = {
    /**
     * Successful Response
     */
    200: BoundingBoxResponse;
};

export type GetBoundingBoxBoxesSlideFilenameGetResponse = GetBoundingBoxBoxesSlideFilenameGetResponses[keyof GetBoundingBoxBoxesSlideFilenameGetResponses];

export type SetBoundingBoxBoxesSlideFilenamePutData = {
    body: BoundingBoxInput;
    path: {
        slide_filename: string;
    };
    query?: never;
    url: '/boxes/{slide_filename}';
};

export type SetBoundingBoxBoxesSlideFilenamePutErrors = {
    /**
     * Slide not found
     */
    404: unknown;
    /**
     * Invalid bounding box data
     */
    422: unknown;
};

export type SetBoundingBoxBoxesSlideFilenamePutResponses = {
    /**
     * Successful Response
     */
    200: BoundingBoxResponse;
};

export type SetBoundingBoxBoxesSlideFilenamePutResponse = SetBoundingBoxBoxesSlideFilenamePutResponses[keyof SetBoundingBoxBoxesSlideFilenamePutResponses];

export type GetSlideImageSlidesSlideFilenameImageGetData = {
    body?: never;
    path: {
        slide_filename: string;
    };
    query?: never;
    url: '/slides/{slide_filename}/image';
};

export type GetSlideImageSlidesSlideFilenameImageGetErrors = {
    /**
     * Slide not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Error processing slide image
     */
    500: unknown;
};

export type GetSlideImageSlidesSlideFilenameImageGetError = GetSlideImageSlidesSlideFilenameImageGetErrors[keyof GetSlideImageSlidesSlideFilenameImageGetErrors];

export type GetSlideImageSlidesSlideFilenameImageGetResponses = {
    /**
     * Successful Response
     */
    200: SlideImageResponse;
};

export type GetSlideImageSlidesSlideFilenameImageGetResponse = GetSlideImageSlidesSlideFilenameImageGetResponses[keyof GetSlideImageSlidesSlideFilenameImageGetResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};